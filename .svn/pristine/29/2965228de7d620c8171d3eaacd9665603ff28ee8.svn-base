package jpp.qrcode.decode;

import jpp.qrcode.MaskApplier;
import jpp.qrcode.QRCode;
import jpp.qrcode.ReservedModulesMask;

public class Decoder {
	public static String decodeToString(QRCode qrCode) {
		boolean[][] matrix = qrCode.data();

		//Kopie
		boolean[][] mask = new boolean[qrCode.data().length][qrCode.data().length];
		for (int i = 0; i < mask.length; i++) {
			for (int j = 0; j < mask.length; j++) {
				mask[i][j] = matrix[i][j];
			}
		}
		ReservedModulesMask reservedModulesMask = ReservedModulesMask.forVersion(qrCode.version());
		MaskApplier.applyTo(mask,qrCode.maskPattern().maskFunction(),reservedModulesMask);
		byte[] extrahiert = DataExtractor.extract(mask,reservedModulesMask,qrCode.version().totalByteCount());
		DataDestructurer.destructure(extrahiert,qrCode.version().correctionInformationFor(qrCode.errorCorrection()));

		String result = DataDecoder.decodeToString(extrahiert,qrCode.version(),qrCode.errorCorrection());
		return result;
	}
}
